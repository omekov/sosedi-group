// Code generated by MockGen. DO NOT EDIT.
// Source: internal/firstname/repository.go

// Package mock_firstname is a generated GoMock package.
package mock_firstname

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockFirstName is a mock of FirstName interface.
type MockFirstName struct {
	ctrl     *gomock.Controller
	recorder *MockFirstNameMockRecorder
}

// MockFirstNameMockRecorder is the mock recorder for MockFirstName.
type MockFirstNameMockRecorder struct {
	mock *MockFirstName
}

// NewMockFirstName creates a new mock instance.
func NewMockFirstName(ctrl *gomock.Controller) *MockFirstName {
	mock := &MockFirstName{ctrl: ctrl}
	mock.recorder = &MockFirstNameMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFirstName) EXPECT() *MockFirstNameMockRecorder {
	return m.recorder
}

// GetAll mocks base method.
func (m *MockFirstName) GetAll(ctx context.Context) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll", ctx)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockFirstNameMockRecorder) GetAll(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockFirstName)(nil).GetAll), ctx)
}
